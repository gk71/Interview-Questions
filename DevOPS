DevOps Interview Questions 

================================================
Questions covers the below tools/topics
================================================
GIT
Jenkins
Ansible
Dockers & Containers
Kubernetes
OpenShift
AWS
CI/CD
Scripting(Shell/Python)
Infra as a code (Terraform or Cloud Formation)
Linux (RHEL)
Monitoring (Application Monitoring, Log monitoring)


--------------------------------------------------
 GIT
 -------------------------------------------------
* What is GIT ?
Git is a DevOps tool used for source code management. It is a free and open-source version control system used to handle small to very large projects efficiently.
Git is used to tracking changes in the source code, enabling multiple developers to work together on non-linear development.
-------------------------------------------------------------------------------
* What is difference between GIT & Github ?
While Git is a tool that's used to manage multiple versions of source code edits that are then transferred to files in a Git repository, GitHub serves as a location for 
uploading copies of a Git repository.
-------------------------------------------------------------
* What is SCM & VCS ? 
is a way to manage any document changes developers make to software code.
-------------------------------------------------------------
* What are the process of pushing the code to Github Repository ?
Initialize the local directory as a Git repository.
$ git init -b main
$ git add .
$ git commit -m "First commit"
$ git remote add origin  <REMOTE_URL> 
$ git push origin main
-------------------------------------------------------------
* Why do we commit ?
 git commit is used to create a snapshot of the staged changes along a timeline of a Git projects history.
 --------------------------------------------------------------
* What are the commands of GIT to push the code ?
 git push origin master  
 ---------------------------------------------------------------
* How you can merge a git repository with another ?
   "to merge a branch to master
--> stay in master then run 
git merge branch1
then the branch will get merged to master "
---------------------------------------------------------------

* What is branching in git ?
 Git branches are effectively a pointer to a snapshot of your changes
 --------------------------------------------------------------
* Different types of branching in GIT ?
Master
Maintenance
release
hotfix
feature
-----------------------------------------------------------------
* What is merge conflict in git?
an event that takes place when Git is unable to automatically resolve differences in code between two commits.
----------------------------------------------------------------
* How you can resolve merge conflict if you are merging same
  project and in the same branch ? 

The easiest way to resolve a conflicted file is to open it and make any necessary changes.
After editing the file, we can use the git add a command to stage the new merged content.
The final step is to create a new commit with the help of the git commit command.

====================================================
Jenkins
====================================================

* What is Jenkins ?
  an open source automation server which enables developers around the world to reliably build, test,    and deploy their software.
* Why we use Jenkins ?
to build and test your software projects continuously making it easier for developers to integrate changes to the project, and making it easier for users to obtain a fresh build.
* What are the other tools/technologies present in market other than
  Jenkins for CI/CD ?
  CircleCI. ...
TeamCity. ...
Travis CI. ...
BuildMaster. ...
Bitrise. ...

* How to move Jenkins from one server to another ? 
Method 1 using thin backup plugin
On Sourse Jenkins go to ThinBackup → Backup Now
Copy backup to target
On Target Jenkins go to ThinBackup → Restore, and then restart Jenkins service.  

METHOD 2 (copying JENKINS_HOME)

METHOD 3 (job imports plugin)
install this plugin
then this will appear in the dashboard
on the left side , open the plugin
add the URL to the other server and the folders (jobs) it should fetch
the new server will fetch the specified jobs from the old server or infact all.



* How to create Jenkins backup ?
thinbackup plugin
* What are plugins in Jenkins ?
  The primary means of enhancing the functionality of a Jenkins environment to suit organization- or user-specific needs.
  
* What are the default plugins installed in Jenkins ?
* How to schedule builds in Jenkins ?
* Difference between Ant, Maven, Gradle ? 
* Difference between Jenkins, Teamcity and Bamboo ?
* How to configure a cloud access in Jenkins ?
* What is Jenkins slaves ?
* How to run a groovy script in Jenkins ?
* What is Jenkins Pipeline ?
a suite of plugins which supports implementing and integrating continuous delivery pipelines into Jenkins
* What are different types of Jenkins Pipeline ?
What are different types of Jenkins pipeline?
The Jenkins pipelines are divided into two types. They are the declarative and scripted pipelines. The Declarative pipeline is a recent feature that offers richer syntactical features over Scripted Pipeline syntax
* What is Declarative pipeline in Jenkins ?
Declarative pipelines break down stages into individual stages that can contain multiple steps
* Is Jenkins a CI tool or both CI/CD ? - both

* How to install Jenkins with non root access in Linux ?
* If you have 200 employees in your company, how you can assign Jenkins
  access to these employee how you can give permission in Jenkins ?

Jenkins Task

Task 1
Write the Jenkins pipeline code for Java & Php application
Task 2
Write the Jenkinsfile code to build a Java application with Maven with error handling
Task 3
Complete the following tasks:
1. Jenkins setup on linux
2. Setup app server with apache to deploy an app.
3. create three jobs on jenkins
4. Pull the code from git repo
5. Build the application
6. deploy an app on apache using ansible.
7. app deploy should work with single trigger hit(git pull job -> build app -> deploy on apache server)
8. job should get triggered on git push on git repo

Ansible

* What is Ansible ?
Ansible is an open-source automation tool, or platform, used for IT tasks such as configuration management, application deployment, intraservice orchestration, and provisioning

* What is Configuration Management ?
a systems engineering process for establishing consistency of a product's attributes throughout its life.
* Is Ansible only a tool for Configuration Management ?
is an open source IT Configuration Management, Deployment & Orchestration tool.
* What are the components of Ansible ?
Inventory
Playbook
Modules
Plays
Variables
facts
Configuration files - /etc/ansible/ansible.cfg


* How Ansible works ?
Ansible works by connecting to your nodes and pushing out small programs, called "Ansible modules" to them.

* What are the other tools in market other than Ansible ?
Puppet Enterprise.
Chef.

* How Ansible is different from Chef & Puppet ?
* What is Inventory in Ansible ?
The Ansible inventory file defines the hosts and groups of hosts upon which commands, modules, and tasks in a playbook operate.

* What are the types of Inventories ?
In Ansible, there are two types of inventory files: Static and Dynamic.
In Ansible, a static inventory file is a plain text file that contains a list of managed hosts declared under a host group using either hostnames or IP addresses.



* What is play & playbook ?
A playbook is a list of plays
* Difference between hosts & groups ?
Group variables are a convenient way to apply variables to multiple hosts at once.
* What is Roles ?
Ansible roles allow you to develop reusable automation components by grouping and encapsulating related automation artifacts, 
like configuration files, templates, tasks, and handlers.

* How to install a Role ?
* How to install multiple roles ?
* How to create roles ?
  $ ansible-galaxy init role-name
This role directory contains the following directories or folders by default.

The ‘defaults’ folder – This contains the default variables that will be used by the role.
The ‘files’ folder – Contains files that can be deployed by the role.
The ‘handlers’ folder – Stores handlers that can be used by this role.
he ‘meta’ folder – Contains files that establish the role dependencies.
The ‘tasks’ folder – It contains a YAML file that spells out the tasks for the role itself. Usually, this is the main.yml file.
The ‘templates’ folder – Contains template files that can be modified and allocated to the remote host being provisioned.
The ‘tests’ folder – Integrates testing with Ansible playbook files.
The ‘vars’ folder – Contains variables that are going to be used by the role. You can define them in the playbook file, but it’s recommended you define them in this directory.




* What is Dynamic Inventory & when we use it & for what ?
* Where is the Ansible Configuration file located ?
/etc/ansible/ansible.cfg
* What are the different ways other than SSH by which Ansible can connect to remote hosts ?
The most commonly used are the paramiko SSH, native ssh (just called ssh), and local connection types.
All of these can be used in playbooks and with /usr/bin/ansible to decide how you want to talk to remote machines.
* What is variable in Ansible?
* What are different types of variables ?
  Ansible supports two types of inventory variables Host Variables and Group Variables.
 Host variables are applied to specific host for which the variable is declared. 
 On the other hand, Group Variables are applied to a group of hosts.

* How to assign variables in group vars & hosts vars ?


host variables

In inventory file:

[web_servers]
webserver_1  ntp_server=uk.pool.ntp.org
webserver_2  ntp_server=de.pool.ntp.org

or 
# vim /etc/ansible/host_vars/webserver_1
---
ntp_server=uk.pool.ntp.org

# vim /etc/ansible/host_vars/webserver_2
---
ntp_server=de.pool.ntp.org

-------------------------------------------
Group variables

In inventory file:
[web_servers]
webserver_1
webserver_2
[web_servers:vars]
ansible_user=root
ansible_port=22
    
       OR 
 
 # vim /etc/ansible/group_vars/web_servers
---
ansible_user=root
ansible_port=22





* Difference between File & Template directory in Roles ?
files: contains files which we want to be copied to the remote host.We don't need to specify a path of resources stored in this directory. 
templates: contains file template which supports modifications from the role. We use the Jinja2 templating language for creating templates.

* Difference between default & vars directory in Roles ?
defaults mean “default variables for the roles” and vars mean “other variables for the role”.

* What is Jinja 2 template ?
Jinja2 templates are simple template files that store variables that can change from time to time. 
When Playbooks are executed, these variables get replaced by actual values defined in Ansible Playbooks.
This way, templating offers an efficient and flexible solution to create or alter configuration file with ease.

* What is modules in Ansible ?
Modules (also referred to as “task plugins” or “library plugins”) are discrete units of code that can be used from the command line or in a playbook task. 

* Difference between COPY & FILE modules ?
The copy module – to copy files from ansible control machine local to the remote machine, host/host group
Ansible file module is used to deal with the files, directories, and symlinks. You can create or remove files, symlinks or directories on the remote hosts using the Ansible file module. It is also used to change the file ownership, group and permissions.

* Difference between SHELL & COMMAND modules ?
With the Command module the command will be executed without being proceeded through a shell. As a consequence some variables like $HOME are not available. And also stream operations like <, >, | and & will not work.
The Shell module runs a command through a shell, by default /bin/sh. This can be changed with the option executable. Piping and redirection are here therefor available.
The command module is more secure, because it will not be affected by the user’s environment.

* What is Setup module ? what it does ?
This module is automatically called by playbooks to gather useful variables about remote hosts that can be used in playbooks

* What is register & debug in Ansible ?
* What is changed_when in Ansible ?
* Can we disable automatic facts gathering in Ansible ?
* How error handling can be done in Ansible ?
* How to ignore failed commands in Ansible ?
* What is handlers ? Why we use Handlers in Ansible ?
* What is Privilege Escalation in Ansible ?
* Task to connect(SSH) Ansible to remote host using another user &
  run the playbook to the remote host using with another user ?
* What is Ansible vault?
* How to decrypt a vault file ?
* How to encrypt a string in Ansible using Ansible Vault ?
* If a string is encrypted in a file with a password then how to pass
  the password using parameter while decrypting ?
* If a file is encrypted using password & password is stored in a file
  how to pass the file to decrypt the file ?
* If a file is encrypted using password & password is also encrypted
  then how to provide the password while decrypting the file ?
* What is Ansible galaxy ?
* What is Tags in Ansible ? Why it is used ?
* What is lookup in Ansible playbook ?
* How to control the command failure in Ansible ?
* How to debug your playbook ?
* What is diff mode ?
* What is Dry Run in Ansible & how to do that ?
* What is pre task & post task ?
* How you can run your all tasks at once ?
* What is block in Ansible ?
* What are different variable scopes ?
* How variable precedence takes place ?

* Difference between include & import ?
Include  - is a dynamic inclusion of files
Import - is static in nature

* How to include custom modules in Ansible ?
  You can add a local module in any of below locations as Ansible automatically loads all executable files found in those directories as modules.
~/.ansible/plugins/modules/
/usr/share/ansible/plugins/modules/
any directory in ANSIBLE_LIBRARY environment variable.

* Describe the role directory structure ?
A role directory structure contains directories: defaults, vars, tasks, files, templates, meta, handlers. Each directory must contain a main. yml file which contains relevant content.

Ansible Task

Task 1
Part 1. Write Ansible playbook to automate Jenkins deployment
Part 2. Write Ansible role to install Docker & setup Kubernetes cluster
Automate the pipeline creation in Jenkins to create docker container & deploy on Kubernetes cluster
Task 2
Write ansible playbook for below tasks:
1. Install apache server and deploy sample html application
2. Create /var/www/example.com
3. deploy a sample application to the above directory
4. create a virtual host for deploy application and set it as default virtualhost


 Dockers & Containers
 
* Whats is docker ?
* Difference between container & VMs ?
* Difference between Docker & Virtualization ?
* Difference between container and image ?
* How image builds ?
* What are image layers ?
* How image layers work ?
* What is overlayfs ?
* Where the image layers can be found in which directory ?
* How can we check the content of each layer ?
* How to check the layers stacked with image ?
* What is Union Mount & AUFS ?
* Why use Union mount system for Docker ?
* What are the 3 different directories in /var/lib/docker/aufs ?
* How to run an image ?
* How to tag an image ?
* How to Link one container with another ?
* How do you sequence the containers? A first then B should execute after that ?
* How to create a volume in docker container to store data ?
* How to mount a local directory into a container ?
* How to expose a port no to access container ?
* What is entrypoint in docker ?
* What is dockerfile ?
* Difference between ADD & COPY parameters in dockerfile ?
* How to create a bridge in container ?
* How a container gets an internal IP ?
* Can we check the process of a container inside as well as outside the container ?
* Can we check the container process on docker host ?
* How kernel isolates to run the container and how resources managed by the kernel ?
* What is namespace and cgroups ?
* What is docker-compose and docker-swarm ?
* How you can give different network IP to the container ?
* What are the parameters of dockerfile ?
* Is there any windows container also available ?
* How to stop a container ?
* How to run a container in background ?
* How to go inside a container if container is running in background ?
* How to check running containers ?
* How to remove an image ?
* How to run an image which is in tar format ?
* Command to check the process of a container ?
* How to check resource utilisation of a container ?
* How to create an image ?
* How to save changes of a container ?
* What are registries ?
* Difference between docker commands: up, run & start ?
* Can we run more than one process in a container ?
* How to remove a paticular layer from a container ?
* Give me a command to remove all exited conatiners ?

Docker Task
Part 1. Write a Docker file to create a Docker image which should have Wordpress installed
Part 2. Write a Docker file to create a Docker image for database
Now, use Docker compose to bring up the above Docker images as containers. Database container should mount the local host's “/etc/mysql” volume into it's (containers) /etc/mysql directory.


 Kubernetes
 
* What is Kubernetes ?
* What are Kubernetes Components ?
* What is etcd ?
* What is master & minion ?
* How to make quorum of cluster?
* What is Replication controller & what it does ?
* What is ingress ?
* What is RBAC and how can you configure RBAC in a k8's Cluster ?
* Difference between Kubernetes & Docker Swarm ?
* How can you rollbck the previous version of application in Kuberntes?
* Scenario: There are 2 tables, emp, empsal if there schema changes,
  How does that deployment happens into containers/POD automatically?
* How does container know that application is getting failure ?
* Difference between nodeport, clusterIP, load balancer & ingress ?
* What is kubectl & kubelet ?
* What is the use of Kube-controller manager ?
* What is pod ?
* How many containers can run in a pod ?
* How many containers can be launched in a node ?
* What is the role of Kube-Scheduler ?
* How the 2 pods communicate with each other ?
* How 2 containers inside a pod communicate with each other ?
* What is Flannel & why we use it ?
* Difference between Flannel & Calico ?

OpenShift

* What is Openshift ?
* Difference between Openshift & Kubernetes ?
* What is Services Layer ?
* How to expose a service in Openshift ?
* What are the 3 components of any created project ?
* What is router in default or in any project while creating project ?
* What do you mean by identity provider in Openshift?
* How do you create a New user identity ?
* Where is the user identity located ?
* What is project in Openshift ?
* What are the types of permissions/role bindings in Openshift ?
* How to check the permission of user ?
* How to describe anything in Openshift ?
* How to check no of projects ?
* How to assign a role/permission to a user ?
* What is clusterrolebinding in openshift ?
* What is the process/working of POD creation ?
* What is Builder POD ?
* What is deployer POD ?
* How to create a New application POD ?
* How to check logs of POD ?
* What is Deployment Configuration & why we need DC ?
* What is SVC & why we need SVC ?
* What is RC (Replication Controller) ?
* How to check DC of POD & how to edit DC ?
* How to create route ?
* How to expose svc ?
* How to do rollout ?
* How to increase replica ?
* What is Source to Image in Openshift ?
* What is builder image ?
* What are the process to create source to image ?
* How to give the Cluster role/permission to the user ?
* How to create secure route ?
* What is PV & PVC ?
* What are access modes in PV ?
* What is node selector ?
* What are the two regions in projects ?
* Difference between template & Deployment Configuration ?
* How to migrate whole cluster to another ?
* How to manually migrate container ?

AWS

* What is Amazon RDS ?
* What is EC2, S3, EBS ?
* What is VPC & why we require to create VPC ?
* Is is possible to scale an Ec2 Instance vertically ?
* How is Amazon RDS, Redshift & DynamoDB different ?
* How is a spot Instance different from an On-demand Instance ?
* How Infrastructure As Code processed & executes in AWS ?
* If your Linux-build server getting slow down, what will you do to check ?
* Types of EBS storage ?
* How to backup a running instance ?
* How to secure s3 bucket ?
* What are the security available for users to access S3 ?
* How to create AMI ?
* What are the main components of CloudFormation ?
* What is mapping in cloudformation template ?
* How is YAML different from JSON ?
* Different types of ELB ?
* What is autoscaling group ?
* Which type of ELB is good for application load ?
* What is difference between application load balancer & classic load balancer ?
* What is metrics in cloudwatch ?
* Is it possible to recover your lost private key ?
* How can you connect your EC2 Instance if you lost your key ?
* While connecting to your EC2 instances, what are the possible connection issues one might face ?
* What is Subnet & how many subnets are there in a VPC ?
* Why do we make subnets ?
* What is routing table ?
* How you can connect a private subnet with a public subnet ?
* Can VPC peering possible in two different region ?

AWS Task

Task 1
Write a script which will based on “Number of requests” metric of the ALB/ELB scale up webapp EC2 instances under the Load Balancer, increase AWS Elasticsearch Nodes count, and change the instance size of a MongoDB EC2 instance from m4.large to m4.xlarge. (without using ASG).
Task 2
Architecture Diagram for a PHP/JAVA/Python based application to be hosted on AWS with all mentions like VPC, AWS/any other cloud platform services, well defined network segregation.



Scripting (SHELL/Python)
Shell Task
Task1
Bash script to setup a whole LAMP stack, PHP app can be Wordpress and DB can be MySQL. This script should install all components needed for a Wordpress website.
We should be able to run this script on a local machine or server and after execution of the script it should have Wordpress Running via Nginx/Apache.
DB user for Wordpress should also be made automatically from within the script and same should be set in Wordpress conf file.
Task 2
Bash script to setup a whole JAVA application stack on a server.
This script should install all components needed for a Java/Grails application.
Once the script is run it should have the java application running and being served via Nginx on local machine or server. Sample java application can be simply a tomcat war etc

CI/CD

* What is CI & CD ?
* What is CI/CD pipeline ?
* Difference between Continuous Delivery & Deployment ?
* List the important tools & technologies used in Devops ?

Linux (RHEL)

* What is Linux ?
* What are Linux OS Flavors ?
* Difference between Debian & RPM based OS ?
* What is Kernel ?
* Explain the boot process of Linux OS ?
* How is RHEL different from CentOS ?
* What is the Latest version of RHEL ?
* What is Grub ?
* Difference between Grub & Grub2 ?
* What is boot loader ?
* Do you think the boot process in RHEL 7 is faster than RHEL 6 ? If yes, How ?
* What is .rpm & .deb ?
* What is RPM ?
* What is YUM ?
* Different methods to install the rpm based packages ?
* What is Bash ?
* What is SHell ?
* How many types of SHells are there ? * Explain the daily used basic commands like cp, mv, rm ?
* What is the significance of touch command ?
* In how many ways you can create a file ?
* How to delete the content from a file ?
* Explain the process/work behind hitting the google.com ? how you access google.com ?
* How many types of permissions are there ? What is chmod ?
* What is sticky bit  ?
* What is ACLs ?
* What is SetGID, SetUID & Stickybit ?
* Location where all the user information are stored ?
* File where user password are stored ?
* What is the default permission of a file ?
* What is the significance of -rvf ?
* What is PV, VG & LV ?
* What are the types of file system ?
* What is XFS ?
* Can we reduce XFS file system ?
* How can we extend LV ?
* Command to check running process ?
* Command to check RAM usage ?
* Command to check Disk usage ?
* Difference between ps -aux & top command ?
* What are the ways to check CPU usage ?
* How to check CPU details ?
* Explain the steps to create a partition & how to format with file system ?
* Explain the steps to create LV ?
* Explain steps to reduce XFS & EXT files systems ?
* Significance of .bashrc file ?
* How you check the kernel version ?
* How you check the Red hat release version ?
* Significance of resolv.conf file ?
* What is DNS ? How you resolve DNS ? Types of DNS records ?
* Difference between Nginx & HTTP Server ?
* Port no of HTTP, FTP, SSH, HTTPS ?
* What is SSH ?  How you generate SSH-keys ?
* What is Private & public key ? How they authenticate ?
* Configuration file of SSH ?
* Configuration file of HTTP ?
* What is Virtual Hosting ? How you configure virtual hosting ?
* Explain ifconfig command ?
* Difference between IPv4 & IPv6 ?
* What is MAC address ? can we change the physical address ?
* How to check system uptime ?
* How to check memory information ?
* What is SWAP ?
* What is the exact memory free in your system ?
* What is cache memory ?
* What if you can do rm -rvf / ?
* Kinds of permission in Linux ?
* What is vim & vi ?
* What is pipe | ?
* What is grep command ?
* What Find command does ?
* How to redirect commands output ?
* What is systemd in Linux ?
* What does systemctl do ?
* If you run a command like nautilus in terminal, whether it will block your terminal or not ?
* If yes, whats the solution of this to not to unblock the terminal without closing the command application?
* What is rsyslog ?
* What is SSH-tunnel ?
* How to set history size ?
* How to extend VG ?
* What are logical & extended partitions ?
* Explain the steps to reset root password at boot time ?
* What are run-levels ? How many types of run levels are there ?
* How we change the run level ?
* How to check the logs ?
* Difference between Journalctl & tail command ?
* What does the subscription-manager do ?
* How to archive a file ?
* What is umask ?
* How to kill a process ?
* How to assign IP address manually ?
* How to assign static IP address to a system ?
* Explain the different types of Linux process states ?
* What is a Zombie process ?
* What is KVM ?
* What is hypervisor ?
* Difference between MBR & GPT ?
* How you can mount a file system permanently ?
* What is cron ? How to setup a cron job ?
* What is Kickstart ?
* How to create a network bridge in Linux ?
* Difference between iptables & firewalld
* What is SElinux ?
* What is ISCSI & targetcli ?
* Difference between NFS & SAMBA ?
* What is nfsnobody ?
* What is SSHFS ?
* What is Kerberos ?
* How to secure NFS with Kerberos ?
* What is the difference between telnet & SSH ?
* What is DHCP ?
* What is Kickstart file ?
* What is NTP Server ? How to configure NTP ?
 
 Monitoring
 
* Why we use monitoring ?
* What are the different tools & technologies for monitoring ?
* How we monitor our applications & servers differently  ?
* What is Prometheus ? How is different from other monitoring tools ?
* What is ELK stack ?
* Why we use Grafana ?
* How we query different outputs in Prometheus ?
* What type of graph can be implemented in Grafana ?
